//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSN.ModelMate.MapToolkit.EDM
{
    using System;
    using System.Collections.Generic;
    
    public partial class Device
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Device()
        {
            this.IISApplicationPools = new HashSet<IISApplicationPool>();
            this.IISEnabledServices = new HashSet<IISEnabledService>();
            this.IISVirtualDirApplications = new HashSet<IISVirtualDirApplication>();
            this.IISVirtualDirApplicationsSubdirs = new HashSet<IISVirtualDirApplicationsSubdir>();
            this.IISWebInfoes = new HashSet<IISWebInfo>();
            this.IISWebServerSettings = new HashSet<IISWebServerSetting>();
            this.IISWebStatus = new HashSet<IISWebStatu>();
            this.CollectorClassStatus = new HashSet<CollectorClassStatu>();
            this.DeviceConnectionErrors = new HashSet<DeviceConnectionError>();
            this.AdDiscoveredUsers = new HashSet<AdDiscoveredUser>();
            this.BinaryFiles = new HashSet<BinaryFile>();
            this.BrowserExtensions = new HashSet<BrowserExtension>();
            this.CandidateConnectionStrings = new HashSet<CandidateConnectionString>();
            this.CdromDrives = new HashSet<CdromDrive>();
            this.CdromDrives1 = new HashSet<CdromDrives1>();
            this.CommonAreaPhones = new HashSet<CommonAreaPhone>();
            this.ConfigDbDsns = new HashSet<ConfigDbDsn>();
            this.Controls = new HashSet<Control>();
            this.DataBaseFileGroups = new HashSet<DataBaseFileGroup>();
            this.DataBaseProperties = new HashSet<DataBaseProperty>();
            this.Databases = new HashSet<Databas>();
            this.DatabaseSchemas = new HashSet<DatabaseSchema>();
            this.DatabasesCounters = new HashSet<DatabasesCounter>();
            this.DataBaseServerConfigurations = new HashSet<DataBaseServerConfiguration>();
            this.DataBaseServerProperties = new HashSet<DataBaseServerProperty>();
            this.DataBaseUserGroups = new HashSet<DataBaseUserGroup>();
            this.DataFiles = new HashSet<DataFile1>();
            this.DataFiles1 = new HashSet<DataFile>();
            this.DeviceAssessments = new HashSet<DeviceAssessment>();
            this.DeviceUserProfiles = new HashSet<DeviceUserProfile>();
            this.DiskDrives = new HashSet<DiskDrive>();
            this.FepAccessLicenses = new HashSet<FepAccessLicense>();
            this.Filesystems = new HashSet<Filesystem>();
            this.FrontEndServers = new HashSet<FrontEndServer>();
            this.Guest1 = new HashSet<Guest1>();
            this.HomeNames = new HashSet<HomeName>();
            this.Host1 = new HashSet<Host1>();
            this.HostGuestDetails = new HashSet<HostGuestDetail>();
            this.InstalledDotnetFrameworks = new HashSet<InstalledDotnetFramework>();
            this.InternetBrowsers = new HashSet<InternetBrowser>();
            this.Inventories = new HashSet<Inventory>();
            this.Inventory1 = new HashSet<Inventory1>();
            this.LogicalDisks = new HashSet<LogicalDisk>();
            this.MetricAggregations = new HashSet<MetricAggregation>();
            this.MetricPerTimeIntervals = new HashSet<MetricPerTimeInterval>();
            this.MSClusterAvailableDisks = new HashSet<MSClusterAvailableDisk>();
            this.MSClusterClusters = new HashSet<MSClusterCluster>();
            this.MSClusterClusterSharedVolumes = new HashSet<MSClusterClusterSharedVolume>();
            this.MSClusterDisks = new HashSet<MSClusterDisk>();
            this.MSClusterDiskPartitions = new HashSet<MSClusterDiskPartition>();
            this.MSClusterNetworks = new HashSet<MSClusterNetwork>();
            this.MSClusterNetworkInterfaces = new HashSet<MSClusterNetworkInterface>();
            this.MSClusterNodes = new HashSet<MSClusterNode>();
            this.MSClusterResources = new HashSet<MSClusterResource>();
            this.MSClusterResourceGroups = new HashSet<MSClusterResourceGroup>();
            this.MSClusterResourceTypes = new HashSet<MSClusterResourceType>();
            this.MSClusterServices = new HashSet<MSClusterService>();
            this.NetworkAdapterConfigurations = new HashSet<NetworkAdapterConfiguration>();
            this.NetworkAdapters = new HashSet<NetworkAdapter>();
            this.NetworkAdapters1 = new HashSet<NetworkAdapters1>();
            this.Options = new HashSet<Option>();
            this.PciDevices = new HashSet<PciDevice>();
            this.PhysicalMemories = new HashSet<PhysicalMemory>();
            this.PnpEntities = new HashSet<PnpEntity>();
            this.Processors1 = new HashSet<Processors1>();
            this.Processors2 = new HashSet<Processors2>();
            this.Products = new HashSet<Product>();
            this.Products1 = new HashSet<Products1>();
            this.Products2 = new HashSet<Products2>();
            this.Products3 = new HashSet<Products3>();
            this.ProductsSwids = new HashSet<ProductsSwid>();
            this.ProductsUninstalls = new HashSet<ProductsUninstall>();
            this.ProviderLocations = new HashSet<ProviderLocation>();
            this.RawMetrics = new HashSet<RawMetric>();
            this.RDLicensingKeyPacks = new HashSet<RDLicensingKeyPack>();
            this.Registrars = new HashSet<Registrar>();
            this.RegistryAttributes = new HashSet<RegistryAttribute>();
            this.SchemaObjects = new HashSet<SchemaObject>();
            this.ServerFeatures = new HashSet<ServerFeature>();
            this.ServerRoleAssessments = new HashSet<ServerRoleAssessment>();
            this.Services = new HashSet<Service>();
            this.SmsSites = new HashSet<SmsSite>();
            this.SmsSiteSystemSummarizers = new HashSet<SmsSiteSystemSummarizer>();
            this.SmsUTDevices = new HashSet<SmsUTDevice>();
            this.SmsUTUsers = new HashSet<SmsUTUser>();
            this.SoftwareLicensingProducts = new HashSet<SoftwareLicensingProduct>();
            this.SoundDevices = new HashSet<SoundDevice>();
            this.UsageDevices = new HashSet<UsageDevice>();
            this.UserControls = new HashSet<UserControl>();
            this.VideoControllers = new HashSet<VideoController>();
            this.WindowsInstalledSoftwareFulls = new HashSet<WindowsInstalledSoftwareFull>();
            this.AppConfigs = new HashSet<AppConfig>();
        }
    
        public System.Guid DeviceNumber { get; set; }
        public string AccountExpires { get; set; }
        public Nullable<long> ActivationRequired { get; set; }
        public Nullable<System.DateTime> AdDatetime { get; set; }
        public string AdDnsHostName { get; set; }
        public string AdDomainName { get; set; }
        public string AdFullyQualifiedDomainName { get; set; }
        public string AdOsVersion { get; set; }
        public Nullable<byte> AdCollector { get; set; }
        public Nullable<int> AdminPasswordStatus { get; set; }
        public string BiosBuildNumber { get; set; }
        public string BiosCharacteristics { get; set; }
        public string BiosCodeset { get; set; }
        public Nullable<System.DateTime> BiosInstallDate { get; set; }
        public string BiosManufacturer { get; set; }
        public string BiosName { get; set; }
        public Nullable<System.DateTime> BiosReleaseDate { get; set; }
        public string BiosSerialNumber { get; set; }
        public string BiosVersion { get; set; }
        public string BootDevice { get; set; }
        public Nullable<byte> BootRomSupported { get; set; }
        public string BuildNumber { get; set; }
        public Nullable<long> BusType { get; set; }
        public Nullable<int> ChassisBootUpState { get; set; }
        public string ComputerSystemName { get; set; }
        public string ChassisTypes { get; set; }
        public string CountryCode { get; set; }
        public Nullable<int> CreateCollectorId { get; set; }
        public Nullable<System.DateTime> CreateDatetime { get; set; }
        public Nullable<System.DateTime> CreationDate { get; set; }
        public string CsdVersion { get; set; }
        public string CurrentLanguage { get; set; }
        public Nullable<int> CurrentTimeZone { get; set; }
        public Nullable<byte> DayLightInEffect { get; set; }
        public Nullable<byte> Debug { get; set; }
        public string Description { get; set; }
        public Nullable<int> DeviceStatusScm { get; set; }
        public Nullable<int> DeviceStatusSnmp { get; set; }
        public string DeviceStatusWmi { get; set; }
        public string DistinguishedName { get; set; }
        public string DnsHostName { get; set; }
        public string DomainName { get; set; }
        public Nullable<int> DomainRole { get; set; }
        public string Drive { get; set; }
        public Nullable<byte> EnableDaylightSavingsTime { get; set; }
        public string EnclosureManufacturer { get; set; }
        public string EnclosureSerialNumber { get; set; }
        public Nullable<int> EncryptionLevel { get; set; }
        public Nullable<long> FreePhysicalMemory { get; set; }
        public Nullable<long> FreeSpace { get; set; }
        public Nullable<long> FreeSpaceInPagingFiles { get; set; }
        public Nullable<long> FreeVirtualMemory { get; set; }
        public Nullable<int> FrontPanelResetStatus { get; set; }
        public Nullable<byte> HotSwappable { get; set; }
        public string HostNameForVm { get; set; }
        public string IdentificationCode { get; set; }
        public Nullable<byte> InfraredSupported { get; set; }
        public Nullable<byte> InsertState { get; set; }
        public Nullable<int> InstallableLanguages { get; set; }
        public byte[] InventoryRowversion { get; set; }
        public int InventoryWatermark { get; set; }
        public string NetworkIpAddress { get; set; }
        public Nullable<int> KeyboardPasswordStatus { get; set; }
        public string LanguageEdition { get; set; }
        public Nullable<long> LargeSystemCache { get; set; }
        public string LastBootupTime { get; set; }
        public Nullable<long> LastLogonTimestamp { get; set; }
        public Nullable<long> LastUserLogon { get; set; }
        public string LastLoggedOnUser { get; set; }
        public Nullable<System.DateTime> LocalDatetime { get; set; }
        public string Locale { get; set; }
        public string Location { get; set; }
        public Nullable<byte> LockPresent { get; set; }
        public Nullable<long> MaxNumberOfProcesses { get; set; }
        public Nullable<long> MaxProcessMemorySize { get; set; }
        public Nullable<long> MaximumSize { get; set; }
        public string Model { get; set; }
        public string MuiLanguages { get; set; }
        public string NetServerEnumDomainName { get; set; }
        public string NetServerEnumOsVersion { get; set; }
        public Nullable<byte> NetworkServerModeEnabled { get; set; }
        public Nullable<int> NumberOfCores { get; set; }
        public Nullable<long> NumberOfLicensedUsers { get; set; }
        public Nullable<int> NumberOfLogicalProcessors { get; set; }
        public Nullable<int> NumberOfProcessors { get; set; }
        public Nullable<long> NumberOfUsers { get; set; }
        public Nullable<System.Guid> ObjectGuid { get; set; }
        public string OperatingSystem { get; set; }
        public string OperatingSystemServicePack { get; set; }
        public Nullable<long> OperatingSystemSku { get; set; }
        public string Organization { get; set; }
        public string OsArchitecture { get; set; }
        public string OsBuildType { get; set; }
        public string OsCaption { get; set; }
        public string OsCodeset { get; set; }
        public Nullable<int> OsEncryptionLevel { get; set; }
        public Nullable<System.DateTime> OsInstallDate { get; set; }
        public Nullable<long> OsLanguage { get; set; }
        public string OsManufacturer { get; set; }
        public Nullable<long> OsProductSuite { get; set; }
        public string OsVersion { get; set; }
        public string PartNumber { get; set; }
        public Nullable<byte> PartOfDomain { get; set; }
        public Nullable<long> PauseAfterReset { get; set; }
        public Nullable<byte> PcSystemType { get; set; }
        public string PlusProductId { get; set; }
        public string PlusVersionNumber { get; set; }
        public Nullable<int> PowerOnPasswordStatus { get; set; }
        public Nullable<int> PowerState { get; set; }
        public Nullable<int> PowerSupplyState { get; set; }
        public Nullable<byte> PrimaryBios { get; set; }
        public string PrimaryFlag { get; set; }
        public string PrimaryOwnerContact { get; set; }
        public string PrimaryOwnerName { get; set; }
        public string ProductId { get; set; }
        public Nullable<int> ProductType { get; set; }
        public Nullable<long> PwdLastSet { get; set; }
        public Nullable<short> QuantumLength { get; set; }
        public Nullable<short> QuantumType { get; set; }
        public Nullable<System.DateTime> RegistryDatetime { get; set; }
        public Nullable<int> RegistryScanResult { get; set; }
        public string RegisteredUser { get; set; }
        public Nullable<long> RemainingEvaluationPeriod { get; set; }
        public Nullable<long> RemainingGracePeriod { get; set; }
        public Nullable<byte> Removable { get; set; }
        public Nullable<byte> Replaceable { get; set; }
        public Nullable<int> ResetCapability { get; set; }
        public Nullable<int> ResetCount { get; set; }
        public Nullable<int> ResetLimit { get; set; }
        public string Roles { get; set; }
        public Nullable<System.DateTime> ScmDatetime { get; set; }
        public Nullable<int> SecurityBreach { get; set; }
        public Nullable<int> SecurityStatus { get; set; }
        public string SerialNumber { get; set; }
        public string ServerName { get; set; }
        public Nullable<int> ServicePackMajorVersion { get; set; }
        public Nullable<int> ServicePackMinorVersion { get; set; }
        public string SiteName { get; set; }
        public string SmbiosAssetTag { get; set; }
        public string SmbiosBiosVersion { get; set; }
        public Nullable<int> SmbiosMajorVersion { get; set; }
        public Nullable<int> SmbiosMinorVersion { get; set; }
        public Nullable<byte> SmbiosPresent { get; set; }
        public string SnmpManufacturerOid { get; set; }
        public Nullable<int> SnmpScanResult { get; set; }
        public Nullable<int> SshScanResult { get; set; }
        public Nullable<long> SuiteMask { get; set; }
        public string SupportContactDescription { get; set; }
        public string SystemDevice { get; set; }
        public string SystemDirectory { get; set; }
        public string SystemDrive { get; set; }
        public Nullable<int> SystemStartupDelay { get; set; }
        public string SystemType { get; set; }
        public Nullable<long> TotalPhysicalMemory { get; set; }
        public Nullable<long> TotalSwapSpaceSize { get; set; }
        public Nullable<long> TotalVirtualMemorySize { get; set; }
        public Nullable<long> TotalVisibleMemorySize { get; set; }
        public Nullable<int> UpdateCollectorId { get; set; }
        public Nullable<System.DateTime> UpdateDatetime { get; set; }
        public string UserName { get; set; }
        public string VmFriendlyName { get; set; }
        public Nullable<int> WakeupType { get; set; }
        public string WindowsDirectory { get; set; }
        public Nullable<byte> WinNetworkCollector { get; set; }
        public Nullable<System.DateTime> WinNetworkDatetime { get; set; }
        public string WmiChassisTypes { get; set; }
        public Nullable<System.DateTime> WmiDatetime { get; set; }
        public string WmiDnsHostName { get; set; }
        public string WmiDomainName { get; set; }
        public Nullable<int> WmiProductType { get; set; }
        public string WmiOsVersion { get; set; }
        public Nullable<int> WmiScanResult { get; set; }
        public Nullable<System.DateTime> WmiScanResultDatetime { get; set; }
        public Nullable<int> WmiDepScanResult { get; set; }
        public Nullable<System.DateTime> WmiDepScanResultDatetime { get; set; }
        public string Workgroup { get; set; }
    
        public virtual CategorizedDevice CategorizedDevice { get; set; }
        public virtual HardwareInventoryCore HardwareInventoryCore { get; set; }
        public virtual HardwareInventoryEx HardwareInventoryEx { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISApplicationPool> IISApplicationPools { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISEnabledService> IISEnabledServices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISVirtualDirApplication> IISVirtualDirApplications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISVirtualDirApplicationsSubdir> IISVirtualDirApplicationsSubdirs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISWebInfo> IISWebInfoes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISWebServerSetting> IISWebServerSettings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IISWebStatu> IISWebStatus { get; set; }
        public virtual HypervFasttrackCustomization HypervFasttrackCustomization { get; set; }
        public virtual SqlApplianceCustomization SqlApplianceCustomization { get; set; }
        public virtual AdDiscoveredDevice AdDiscoveredDevice { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CollectorClassStatu> CollectorClassStatus { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DeviceConnectionError> DeviceConnectionErrors { get; set; }
        public virtual DeviceInventoryStat DeviceInventoryStat { get; set; }
        public virtual AboutInfo AboutInfo { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AdDiscoveredUser> AdDiscoveredUsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BinaryFile> BinaryFiles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BrowserExtension> BrowserExtensions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CandidateConnectionString> CandidateConnectionStrings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CdromDrive> CdromDrives { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CdromDrives1> CdromDrives1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CommonAreaPhone> CommonAreaPhones { get; set; }
        public virtual ComputerSystemProduct ComputerSystemProduct { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConfigDbDsn> ConfigDbDsns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Control> Controls { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataBaseFileGroup> DataBaseFileGroups { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataBaseProperty> DataBaseProperties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Databas> Databases { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DatabaseSchema> DatabaseSchemas { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DatabasesCounter> DatabasesCounters { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataBaseServerConfiguration> DataBaseServerConfigurations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataBaseServerProperty> DataBaseServerProperties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataBaseUserGroup> DataBaseUserGroups { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataFile1> DataFiles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DataFile> DataFiles1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DeviceAssessment> DeviceAssessments { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DeviceUserProfile> DeviceUserProfiles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DiskDrive> DiskDrives { get; set; }
        public virtual Distribution Distribution { get; set; }
        public virtual DnsConfiguration DnsConfiguration { get; set; }
        public virtual Edition Edition { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FepAccessLicense> FepAccessLicenses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Filesystem> Filesystems { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FrontEndServer> FrontEndServers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Guest1> Guest1 { get; set; }
        public virtual HardwareAssessment HardwareAssessment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HomeName> HomeNames { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Host1> Host1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HostGuestDetail> HostGuestDetails { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InstalledDotnetFramework> InstalledDotnetFrameworks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InternetBrowser> InternetBrowsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Inventory> Inventories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Inventory1> Inventory1 { get; set; }
        public virtual LicensingAssessment LicensingAssessment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LogicalDisk> LogicalDisks { get; set; }
        public virtual MdtDeploymentTattoo MdtDeploymentTattoo { get; set; }
        public virtual MemoryInfo MemoryInfo { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MetricAggregation> MetricAggregations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MetricPerTimeInterval> MetricPerTimeIntervals { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterAvailableDisk> MSClusterAvailableDisks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterCluster> MSClusterClusters { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterClusterSharedVolume> MSClusterClusterSharedVolumes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterDisk> MSClusterDisks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterDiskPartition> MSClusterDiskPartitions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterNetwork> MSClusterNetworks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterNetworkInterface> MSClusterNetworkInterfaces { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterNode> MSClusterNodes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterResource> MSClusterResources { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterResourceGroup> MSClusterResourceGroups { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterResourceType> MSClusterResourceTypes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MSClusterService> MSClusterServices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NetworkAdapterConfiguration> NetworkAdapterConfigurations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NetworkAdapter> NetworkAdapters { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NetworkAdapters1> NetworkAdapters1 { get; set; }
        public virtual OemData OemData { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Option> Options { get; set; }
        public virtual OsInfo OsInfo { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PciDevice> PciDevices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PhysicalMemory> PhysicalMemories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PnpEntity> PnpEntities { get; set; }
        public virtual PowerShellComputerName PowerShellComputerName { get; set; }
        public virtual Processor Processor { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Processors1> Processors1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Processors2> Processors2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Product> Products { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Products1> Products1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Products2> Products2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Products3> Products3 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductsSwid> ProductsSwids { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductsUninstall> ProductsUninstalls { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProviderLocation> ProviderLocations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RawMetric> RawMetrics { get; set; }
        public virtual RDLicensingIssuedLicens RDLicensingIssuedLicens { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RDLicensingKeyPack> RDLicensingKeyPacks { get; set; }
        public virtual RDLicensingServer RDLicensingServer { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Registrar> Registrars { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RegistryAttribute> RegistryAttributes { get; set; }
        public virtual SCDiscoveredDevice SCDiscoveredDevice { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SchemaObject> SchemaObjects { get; set; }
        public virtual Server Server { get; set; }
        public virtual ServerAssessment ServerAssessment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServerFeature> ServerFeatures { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServerRoleAssessment> ServerRoleAssessments { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Service> Services { get; set; }
        public virtual SmbiosInfo SmbiosInfo { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SmsSite> SmsSites { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SmsSiteSystemSummarizer> SmsSiteSystemSummarizers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SmsUTDevice> SmsUTDevices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SmsUTUser> SmsUTUsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SoftwareLicensingProduct> SoftwareLicensingProducts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SoundDevice> SoundDevices { get; set; }
        public virtual SqlInstance SqlInstance { get; set; }
        public virtual SspInstallTattoo SspInstallTattoo { get; set; }
        public virtual Statistic Statistic { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UsageDevice> UsageDevices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserControl> UserControls { get; set; }
        public virtual VCenter VCenter { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VideoController> VideoControllers { get; set; }
        public virtual Windows10Assessment Windows10Assessment { get; set; }
        public virtual Windows7Assessment Windows7Assessment { get; set; }
        public virtual Windows8Assessment Windows8Assessment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WindowsInstalledSoftwareFull> WindowsInstalledSoftwareFulls { get; set; }
        public virtual WindowsThinPcAssessment WindowsThinPcAssessment { get; set; }
        public virtual WS2008R2Assessment WS2008R2Assessment { get; set; }
        public virtual WS2012Assessment WS2012Assessment { get; set; }
        public virtual WS2012R2Assessment WS2012R2Assessment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AppConfig> AppConfigs { get; set; }
    }
}
